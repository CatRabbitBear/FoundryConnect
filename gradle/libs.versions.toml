[versions]
agp = "8.11.0"
azureAiOpenai = "1.0.0-beta.16"
converterGson = "3.0.0"
dotenvKotlin = "6.5.1"
kotlin = "2.0.21"
coreKtx = "1.10.1"
junit = "4.13.2"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
kotlinxCoroutinesAndroid = "1.10.2"
lifecycleRuntimeKtx = "2.6.1"
activityCompose = "1.8.0"
composeBom = "2024.09.00"
loggingInterceptor = "5.0.0-alpha.16"
mockwebserverVersion = "5.0.0-alpha.14"
okhttpTestingSupport = "5.0.0-alpha.14"
retrofit = "3.0.0"
kotlinxCoroutinesTest = "1.10.2"
mockWebServer = "5.0.0-alpha.16"
datastore = "1.1.0"
markwon = "4.6.2"
semanticKernelAiservicesOpenai = "<version>"
semanticKernelAiservicesOpenaiVersion = "1.4.4-RC1"
semantickernelCore = "0.2.13-alpha"
semantickernelAI = "1.4.4-RC1"
kotlinxCoroutinesJdk8 = "1.10.2"
semanticKernelCoreVersion = "1.4.4-RC1"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
azure-ai-openai = { module = "com.azure:azure-ai-openai", version.ref = "azureAiOpenai" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
dotenv-kotlin = { module = "io.github.cdimascio:dotenv-kotlin", version.ref = "dotenvKotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
mockwebserver-v500alpha14 = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserverVersion" }
okhttp-testing-support = { module = "com.squareup.okhttp3:okhttp-testing-support", version.ref = "okhttpTestingSupport" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockWebServer" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
markwon-core = { module = "io.noties.markwon:core", version.ref = "markwon" }
semantic-kernel-aiservices-openai = { module = "com.microsoft.semantickernel:semantic-kernel-aiservices-openai", version.ref = "semanticKernelAiservicesOpenai" }
semantic-kernel-aiservices-openai-v144rc1 = { module = "com.microsoft.semantickernel:semantic-kernel-aiservices-openai", version.ref = "semanticKernelAiservicesOpenaiVersion" }
semantic-kernel-core = { module = "com.microsoft.semantickernel:semantic-kernel-core", version.ref = "semanticKernelCoreVersion" }
semantickernel-core = { group = "com.microsoft.semantic-kernel", name = "semantickernel-core", version.ref = "semantickernelCore" }
semantickernel-aiservices-openai = { group = "com.microsoft.semantic-kernel", name = "semantickernel-aiservices-openai", version.ref = "semantickernelAI" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinxCoroutinesJdk8" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

